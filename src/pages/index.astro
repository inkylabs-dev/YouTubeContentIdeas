---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import CardHeader from '../components/CardHeader.astro';
import CardTitle from '../components/CardTitle.astro';
import CardDescription from '../components/CardDescription.astro';
import CardContent from '../components/CardContent.astro';
import { contentIdeas } from '../data/contentIdeas';
---

<Layout title="YouTube Content Ideas - 100 Trending Video Ideas">
  <main class="container mx-auto px-4 py-8">
    <!-- Header -->
    <header class="text-center mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        100 Trending YouTube Content Ideas
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Discover fresh, engaging video ideas to grow your YouTube channel. From challenges to tutorials, find the perfect content for your audience.
      </p>
    </header>

    <!-- Search and Filter -->
    <div class="mb-8 max-w-md mx-auto">
      <div class="relative">
        <input
          type="text"
          id="searchInput"
          placeholder="Search content ideas..."
          class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <svg class="absolute left-3 top-3.5 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </div>
      
      <!-- Category Filter -->
      <div class="mt-4">
        <select
          id="categoryFilter"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        >
          <option value="">All Categories</option>
          <option value="Challenge">Challenge</option>
          <option value="Food">Food</option>
          <option value="Lifestyle">Lifestyle</option>
          <option value="DIY">DIY</option>
          <option value="Entertainment">Entertainment</option>
          <option value="Health">Health</option>
          <option value="Education">Education</option>
          <option value="Technology">Technology</option>
          <option value="Fashion">Fashion</option>
          <option value="Gaming">Gaming</option>
          <option value="Art">Art</option>
          <option value="Fitness">Fitness</option>
          <option value="Beauty">Beauty</option>
          <option value="Review">Review</option>
          <option value="Adventure">Adventure</option>
          <option value="Music">Music</option>
          <option value="Family">Family</option>
          <option value="Pets">Pets</option>
          <option value="Science">Science</option>
          <option value="Photography">Photography</option>
          <option value="Wellness">Wellness</option>
          <option value="Media">Media</option>
          <option value="Filmmaking">Filmmaking</option>
          <option value="Reaction">Reaction</option>
        </select>
      </div>
    </div>

    <!-- Content Grid -->
    <div id="contentGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {contentIdeas.map((idea) => (
        <Card class="h-full hover:shadow-lg transition-shadow duration-200" data-category={idea.category} data-title={idea.title.toLowerCase()} data-description={idea.description.toLowerCase()} data-tags={idea.tags.join(' ').toLowerCase()}>
          <CardHeader>
            <div class="flex justify-between items-start mb-2">
              <span class="inline-block px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">
                {idea.category}
              </span>
              <span class="text-sm text-gray-500">#{idea.id}</span>
            </div>
            <CardTitle class="text-lg">{idea.title}</CardTitle>
            <CardDescription>{idea.description}</CardDescription>
          </CardHeader>
          <CardContent>
            <div class="flex flex-wrap gap-1">
              {idea.tags.map((tag) => (
                <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded">
                  #{tag}
                </span>
              ))}
            </div>
          </CardContent>
        </Card>
      ))}
    </div>

    <!-- No results message -->
    <div id="noResults" class="hidden text-center py-12">
      <p class="text-xl text-gray-500 mb-4">No content ideas found</p>
      <p class="text-gray-400">Try adjusting your search or filter criteria</p>
    </div>
  </main>

  <script>
    // Search and filter functionality
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const categoryFilter = document.getElementById('categoryFilter') as HTMLSelectElement;
    const contentGrid = document.getElementById('contentGrid') as HTMLElement;
    const noResults = document.getElementById('noResults') as HTMLElement;

    function filterContent() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedCategory = categoryFilter.value;
      const cards = contentGrid.querySelectorAll('[data-category]') as NodeListOf<HTMLElement>;
      let visibleCount = 0;

      cards.forEach(card => {
        const category = card.getAttribute('data-category') || '';
        const title = card.getAttribute('data-title') || '';
        const description = card.getAttribute('data-description') || '';
        const tags = card.getAttribute('data-tags') || '';

        const matchesSearch = !searchTerm || 
          title.includes(searchTerm) || 
          description.includes(searchTerm) || 
          tags.includes(searchTerm);
        
        const matchesCategory = !selectedCategory || category === selectedCategory;

        if (matchesSearch && matchesCategory) {
          card.style.display = 'block';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });

      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
        contentGrid.classList.add('hidden');
      } else {
        noResults.classList.add('hidden');
        contentGrid.classList.remove('hidden');
      }
    }

    // Event listeners
    searchInput.addEventListener('input', filterContent);
    categoryFilter.addEventListener('change', filterContent);
  </script>
</Layout>